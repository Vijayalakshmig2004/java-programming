1. write a java code to print zigzag array

import java.io.*
import java.util.*;
class zigzag 
{
public static void main(String[] args) 
	{
        	int[] arr = {8,4,3,7,9,5};
        	boolean flag = true; 
        	for (int i = 0; i < arr.length - 1; i++) 
		{
            		if (flag) 
			{ 
                		if (arr[i] > arr[i + 1])
				{
                                     int temp = arr[i];
                    		     arr[i] = arr[i + 1];
                    		     arr[i + 1] = temp;
                		}
            		} 
			else 
			{ 
               		     if (arr[i] < arr[i + 1]) 
			     {
                                   int temp = arr[i];
                    		   arr[i] = arr[i + 1];
                                   arr[i + 1] = temp;
                	     }
                         }
                         flag = !flag;                  
		}

                for (int i = 0; i < arr.length; i++) 
		{
            		System.out.print(arr[i] + " ");
                }
        }
}

2. write a java code for given array of integer find a peak element 
import java.io.*
import java.util.*;
class zigzag 
{
public static void main(String[] args) 
	{
        	int[] arr = {8,4,3,7,9,5};
        	boolean flag = true; 
        	for (int i = 0; i < arr.length - 1; i++) 
		{
            		if (flag) 
			{ 
                		if (arr[i] > arr[i + 1])
				{
                                     int temp = arr[i];
                    		     arr[i] = arr[i + 1];
                    		     arr[i + 1] = temp;
                		}
            		} 
			else 
			{ 
               		     if (arr[i] < arr[i + 1]) 
			     {
                                   int temp = arr[i];
                    		   arr[i] = arr[i + 1];
                                   arr[i + 1] = temp;
                	     }
                         }
                         flag = !flag;                  
		}

                for (int i = 0; i < arr.length; i++) 
		{
            		System.out.print(arr[i] + " ");
                }
        }
}

3. find the contiguous subarray in array
import java.util.*;
import java.lang.Math;
class subarr {
    public static void main(String[] args) {
        int[] arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
        int ans = arr[0];
        int max1 = arr[0];
        
        for (int i = 1; i < arr.length; i++) {
            max1 = Math.max(arr[i], max1 + arr[i]);
            ans = Math.max(ans, max1);
        }
        
        System.out.println("Maximum contiguous subarray sum is " + ans);
    }
}

4.4.Given a string s consisting of words and spaces, return the length of the last word in the string. A word is a maximal substring consisting of non-space characters only. There will be at least one word, consists of only English letters and spaces ' '. 

import java.util.*;
class len 
{
    public static void main(String[] args) 
    {
        String s = "Hello World";
        s = s.trim();
        String[] w = s.split("\\s+");
        String last = w[w.length - 1];
        int len = last.length();
        System.out.println(len); 
    }
}
